apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: argocd-task-diff
  namespace: ci  
spec:
  workspaces:
    - name: diff-result
    - name: source 
  params:
    - name: revision
      description: the revision to sync to
      default: HEAD
      type: string
    - name: flags
      default: --
      type: string
    - name: argocd-version
      default: v2.2.2 
      type: string
  stepTemplate:
    envFrom:
      - configMapRef:
          name: argocd-env-configmap  # used for server address
      - secretRef:
          name: argocd-env-secret  # used for authentication (username/password or auth token)
  steps:
    - name: diff
      image: quay.io/argoproj/argocd:$(params.argocd-version)   
      script: |
        rm -f $(workspaces.diff-result.path)/diff-output.txt
        rm -f $(workspaces.diff-result.path)/argocd-applications.txt
        touch $(workspaces.diff-result.path)/argocd-applications.txt
        rm -f $(workspaces.diff-result.path)/argocd-applications-unique.txt
        cat $(workspaces.source.path)/repository/git-diff.txt      
        # Read the file path from the command line argument
        file_path="$(workspaces.source.path)/repository/git-diff.txt"
       
        # Check if the file exists
        if [ ! -f "$file_path" ]; then
            echo "File $file_path not found."
            exit 1
        fi
        
        # Read the content of the file
        while IFS= read -r line; do
            # Extract the content before the first '/'
            application=$(echo "$line" | awk -F'/' '{print $1}')
            echo Application:$application


            #HELM
            if echo $line | grep -q "/clusters/"; then
                cluster_name=$(echo "$line" | awk -F'/clusters/' '{print tolower($2)}' | sed 's/^values-\(.*\)\.yaml$/\1/')
                echo "$cluster_name-$application" >> $(workspaces.diff-result.path)/argocd-applications.txt
            elif echo $line | grep -q "/templates/" || echo $line | grep -q "/values.yaml" || echo $line | grep -q "/Chart.yaml"; then
                argocd app list -o name -l app-config=$application --insecure >> $(workspaces.diff-result.path)/argocd-applications.txt

            #KUSTOMIZE
            elif echo $line | grep -q "/base/"; then                
                argocd app list -o name -l app-config=$application --insecure >> $(workspaces.diff-result.path)/argocd-applications.txt
            elif echo $line | grep -q "/overlays/"; then
                cluster=$(echo "$line" | awk -F'/overlays/' '{print tolower($2)}' | awk -F'/' '{print $1}')
                echo "$cluster-$application" >> $(workspaces.diff-result.path)/argocd-applications.txt
            else 
                cloud=$(echo "$line" | awk -F'/' '{print $2}')           
                argocd app list -o name -l app-config=$application -l cloud=$cloud --insecure >> $(workspaces.diff-result.path)/argocd-applications.txt
            fi

        done < "$file_path"

        sort -u "$(workspaces.diff-result.path)/argocd-applications.txt" > "$(workspaces.diff-result.path)/argocd-applications-unique.txt"

        argocd_diff() {
            #TODO get app status
            echo "Argo CD application=$1" >> $(workspaces.diff-result.path)/diff-output.txt
            local application="$1"
            set +e
            argocd app diff $application --insecure --revision "$(params.revision)" "$(params.flags)" >> $(workspaces.diff-result.path)/diff-output.txt 2>&1
            local status=$?
            echo "Argo CD diff response=$status" >> $(workspaces.diff-result.path)/diff-output.txt
            
            if [ $status -eq 0 ] 
            then 
              echo "No diff is found" >> $(workspaces.diff-result.path)/diff-output.txt
            elif [ $status -eq 1 ]
            then
              echo "Diff is found" >&2 
            else 
              echo "Argo CD diff error"
            fi
            echo "------------------------------------------------" >> $(workspaces.diff-result.path)/diff-output.txt
            cat $(workspaces.diff-result.path)/diff-output.txt          
        }

        while IFS= read -r line; do
          argocd_diff $line
        done < "$(workspaces.diff-result.path)/argocd-applications-unique.txt"














